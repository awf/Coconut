Let (add_c,
             Lambda (a_c,
                     Lambda (b_c,
                             Call (None, vectorShape,
                                   [Call (None, flatShape,
                                          [Application (Lambda (i_c,
                                                                Value (Card 0)),
                                                        Value (Card 0))]),
                                    Call (None, shapeCard, [a_c])]))),
             Let (vec1_c,
                  Call (None, vectorShape,
                        [Call (None, flatShape, [Value (Card 0)]),
                         Value (Card 3)]),
                  Let (vec2_c,
                       Call (None, vectorShape,
                             [Call (None, flatShape, [Value (Card 0)]),
                              Value (Card 3)]),
                       Application (Application (add_c, vec1_c), vec2_c))))